{"version":3,"sources":["src\\index.ts"],"names":[],"mappings":"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","file":"e88fad86ba5544d6f2a79f8c46a88347.map","sourcesContent":["interface Observer {\n  update(subject: Subject): void;\n}\n\ninterface Subject {\n  addObserver(observer: Observer): void;\n  removeObserver(observer: Observer): void;\n  notifyObservers(): void;\n}\n\nclass Sun implements Subject {\n  private observers: Observer[] = [];\n  private time: number = 6;\n\n  addObserver(observer: Observer) {\n    this.observers.push(observer);\n  }\n\n  removeObserver(observer: Observer) {\n    const index = this.observers.indexOf(observer);\n    if (index !== -1) {\n      this.observers.splice(index, 1);\n    }\n  }\n\n  notifyObservers() {\n    for (const observer of this.observers) {\n      observer.update(this);\n    }\n  }\n\n  getTime(): number {\n    return this.time;\n  }\n\n  setTime(time: number) {\n    this.time = time;\n    this.notifyObservers();\n  }\n}\n\nclass Bird implements Observer {\n  private name: string;\n  private isAwake: boolean = false;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  update(subject: Subject) {\n    const time = (subject as Sun).getTime();\n    if (time >= 5 && time <= 18) {\n      this.isAwake = true;\n      console.log(`Bird ${this.name} is awake.`);\n    } else {\n      this.isAwake = false;\n      console.log(`Bird ${this.name} is sleeping.`);\n    }\n  }\n}\n\nclass Flower implements Observer {\n  public color: string;\n  private bloomingHour: number;\n  private wiltHour: number;\n\n  constructor(color: string, bloomingHour: number, wiltHour: number) {\n    this.color = color;\n    this.bloomingHour = bloomingHour;\n    this.wiltHour = wiltHour;\n  }\n\n  update(subject: Subject) {\n    const time = (subject as Sun).getTime();\n    if (time === this.bloomingHour) {\n      console.log(`Flower with color ${this.color} is blooming.`);\n    } else if (time === this.wiltHour) {\n      console.log(`Flower with color ${this.color} is wilting.`);\n    }\n  }\n}\n\nclass Garden {\n  private sun: Sun;\n  private birds: Bird[] = [];\n  private flowers: Flower[] = [];\n\n  constructor() {\n    this.sun = new Sun();\n  }\n\n  addBird(bird: Bird) {\n    this.sun.addObserver(bird);\n    this.birds.push(bird);\n  }\n\n  addFlower(flower: Flower) {\n    this.sun.addObserver(flower);\n    this.flowers.push(flower);\n  }\n\n  simulateDay() {\n    for (let hour = 6; hour <= 18; hour++) {\n      this.sun.setTime(hour);\n\n      // Simulate bird visiting flowers\n      if (hour >= 6 && hour <= 17) {\n        const randomIndex = Math.floor(Math.random() * this.flowers.length);\n        const flower = this.flowers[randomIndex];\n        console.log(`Birds are visiting flower with color ${flower.color}.`);\n      }\n    }\n  }\n}\n\n// Example usage\nconst garden = new Garden();\n\nconst bird1 = new Bird(\"A\");\nconst bird2 = new Bird(\"B\");\ngarden.addBird(bird1);\ngarden.addBird(bird2);\n\nconst flower1 = new Flower(\n  \"red\",\n  Math.floor(Math.random() * 3),\n  Math.floor(Math.random() * 3)\n);\nconst flower2 = new Flower(\n  \"green\",\n  Math.floor(Math.random() * 3),\n  Math.floor(Math.random() * 3)\n);\ngarden.addFlower(flower1);\ngarden.addFlower(flower2);\n\ngarden.simulateDay();\n"]}